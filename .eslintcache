[{"E:\\Users\\Янис\\dev\\mesto-react\\src\\index.js":"1","E:\\Users\\Янис\\dev\\mesto-react\\src\\components\\Footer.js":"2","E:\\Users\\Янис\\dev\\mesto-react\\src\\components\\PopupWithImage.js":"3","E:\\Users\\Янис\\dev\\mesto-react\\src\\components\\AddCardPopup.js":"4","E:\\Users\\Янис\\dev\\mesto-react\\src\\utils\\api.js":"5","E:\\Users\\Янис\\dev\\mesto-react\\src\\components\\Card.js":"6","E:\\Users\\Янис\\dev\\mesto-react\\src\\components\\PopupWithForm.js":"7","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\reportWebVitals.js":"8","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\AddCardPopup.js":"9","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\utils\\api.js":"10","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\Footer.js":"11","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\PopupHTML.js":"12","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\App.js":"13","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\FormSign.js":"14","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\Header.js":"15","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\index.js":"16","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js":"17","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\utils\\auth.js":"18","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\InfoTooltip.js":"19","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.js":"20","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\Main.js":"21","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\contexts\\StatePopup.js":"22","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\PopupWithForm.js":"23","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\Login.js":"24"},{"size":517,"mtime":1608332560000,"results":"25","hashOfConfig":"26"},{"size":194,"mtime":1608332560000,"results":"27","hashOfConfig":"26"},{"size":521,"mtime":1608332560000,"results":"28","hashOfConfig":"26"},{"size":1192,"mtime":1608332560000,"results":"29","hashOfConfig":"26"},{"size":3442,"mtime":1608332560000,"results":"30","hashOfConfig":"26"},{"size":1317,"mtime":1608332560000,"results":"31","hashOfConfig":"26"},{"size":751,"mtime":1608332560000,"results":"32","hashOfConfig":"26"},{"size":362,"mtime":1608332560000,"results":"33","hashOfConfig":"34"},{"size":1192,"mtime":1614200764566,"results":"35","hashOfConfig":"34"},{"size":3442,"mtime":1608332560000,"results":"36","hashOfConfig":"34"},{"size":194,"mtime":1608332560000,"results":"37","hashOfConfig":"34"},{"size":1853,"mtime":1608332560000,"results":"38","hashOfConfig":"34"},{"size":10010,"mtime":1614215653698,"results":"39","hashOfConfig":"34"},{"size":1422,"mtime":1614213277055,"results":"40","hashOfConfig":"34"},{"size":942,"mtime":1614200814181,"results":"41","hashOfConfig":"34"},{"size":610,"mtime":1614202012280,"results":"42","hashOfConfig":"34"},{"size":84,"mtime":1608332560000,"results":"43","hashOfConfig":"34"},{"size":1394,"mtime":1614203647634,"results":"44","hashOfConfig":"34"},{"size":767,"mtime":1614203872834,"results":"45","hashOfConfig":"34"},{"size":416,"mtime":1614209270095,"results":"46","hashOfConfig":"34"},{"size":1605,"mtime":1614210613934,"results":"47","hashOfConfig":"34"},{"size":78,"mtime":1614198933204,"results":"48","hashOfConfig":"34"},{"size":751,"mtime":1608332560000,"results":"49","hashOfConfig":"34"},{"size":1430,"mtime":1614213306903,"results":"50","hashOfConfig":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i66n1j",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"exdy8a",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Users\\Янис\\dev\\mesto-react\\src\\index.js",[],"E:\\Users\\Янис\\dev\\mesto-react\\src\\components\\Footer.js",[],"E:\\Users\\Янис\\dev\\mesto-react\\src\\components\\PopupWithImage.js",[],"E:\\Users\\Янис\\dev\\mesto-react\\src\\components\\AddCardPopup.js",[],"E:\\Users\\Янис\\dev\\mesto-react\\src\\utils\\api.js",[],"E:\\Users\\Янис\\dev\\mesto-react\\src\\components\\Card.js",[],"E:\\Users\\Янис\\dev\\mesto-react\\src\\components\\PopupWithForm.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\reportWebVitals.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\AddCardPopup.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\utils\\api.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\Footer.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\PopupHTML.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\App.js",["101","102","103","104","105","106"],"import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { Route, Switch, useHistory, useLocation, Redirect } from 'react-router-dom';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport PopupWithImage from './PopupWithImage.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddCardPopup from './AddCardPopup.js';\nimport InfoTooltip from './InfoTooltip';\n\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRoute from './ProtectedRoute';\n\nimport { api } from '../utils/api.js';\nimport * as auth from '../utils/auth';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { StatePopup } from '../contexts/StatePopup';\n\n\n\nfunction App() {\n  const history = useHistory();\n  const location = useLocation();\n  // Устанавливаем стэйты\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [userEmail, setUserEmail] = useState('');\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [currURL, setCurrURL] = useState('');\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isDelCardPopupOpen, setIsDelCardPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isInfoTooltip, setIsInfoTooltip] = useState({\n    isOpen: false,\n    message: '',\n    status: ''\n  });\n\n  const [cards, setCards] = React.useState([]);\n\n  // Используем хук для получения информации о юзере и карточки\n  useEffect(() => {\n    if (loggedIn) {\n      Promise.all([\n        api.getUserInfoFromServer(), //получаем данные о пользователе\n        api.getInitialCards() // Получаем массив карточек\n      ])\n        .then((data) => {\n          const [userData, cardsData] = data;\n          setCurrentUser(userData); //меняем состояния \n          setCards(cardsData);\n        })\n        .catch((err) => { api.setErrorServer(err); })\n    }\n  }, [loggedIn]);\n\n\n  // Обработчик клика по лайку\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card, isLiked)\n      .then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);  // Обновляем стейт\n      })\n      .catch((err) => { api.setErrorServer(err); });\n  }\n\n  // Обработчик кнопки удаления карточки\n  function handleCardDelete(card) {\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.deleteCardToServer(card)\n      .then(() => {\n        // Формируем новый массив на основе имеющегося, если ИД совпадает с ИД \n        // удаляемой карточки, то она не должна попасть в новый массив\n        const newCards = cards.filter((c) => c._id !== card._id && c);\n        setCards(newCards);  // Обновляем стейт\n      })\n      .catch((err) => { api.setErrorServer(err); });\n  }\n\n  // Обработчик кнопки Сохранить в попапе редактирования профиля\n  function handleUpdateUser(inputValues) {\n    api.saveUserInfoToServer(inputValues)   // Сохраняем на сервере\n      .then((userData) => {\n        closeAllPopups()\n        setCurrentUser(userData)\n      }) // устанавливаем новый стэйт: новые данные пользователя\n      .catch((err) => {\n        api.setErrorServer(err);\n      })\n  }\n\n  // Обработчик кнопки Сохранить в попапе редактирования аватара\n  function handleUpdateAvatar(avatar) {\n    api.saveAvatarToServer(avatar)   // Сохраняем на сервере\n      .then((userData) => {\n        setCurrentUser(userData)\n        closeAllPopups()\n      }) // устанавливаем новый стэйт: новый аватар\n      .catch((err) => {\n        api.setErrorServer(err);\n      })\n  }\n\n  // Обработчик кнопки Создать в попапе добавления карточки\n  function handleAddPlace(newCard) {\n    api.saveCardToServer(newCard)   // Сохраняем на сервере\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n        closeAllPopups()\n      }) // Обновляем массив с карточками, добавляем загруженную\n      .catch((err) => { api.setErrorServer(err); })\n  }\n\n  // Обработчики открытия попапов\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  \n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleInfoTooltip(message, status) {\n    setIsInfoTooltip({\n      isOpen: true,\n      message: message,\n      status: status\n    });\n  }\n\n  // Обработчик закрытия попапов\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n    setIsInfoTooltip(false);\n  }\n\n  function handleLogin(email) {\n    setLoggedIn(true);\n    setUserEmail(email);\n  }\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.getContent(jwt)\n        .then((res) => {\n          if (res) {\n            setLoggedIn(true);\n            setUserEmail(res.data.email);\n            history.push('/');\n          }\n        });\n    }\n  }\n\n  function signOut() {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n    history.push('/sign-in');\n  }\n\n  function changeCurrUrl(url) {\n    setCurrURL(url);\n  }\n\n  useEffect(() => {\n    tokenCheck();\n    setCurrURL(location.pathname);\n  }, [location.pathname, currURL]);\n\n  // Объект с состояниями попапов\n  const popupStateContext = {\n    isEditProfilePopupOpen,\n    isEditAvatarPopupOpen,\n    isAddPlacePopupOpen\n  }\n\n  return (\n    <StatePopup.Provider value={popupStateContext}>\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page\">\n        <Header\n            email={userEmail}\n            signOut={signOut}\n            loggedIn={loggedIn}\n            currURL={currURL}\n            changeCurrUrl={changeCurrUrl} />\n          <Switch>\n            <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={() => <Main\n              onEditProfile={handleEditProfileClick}\n              onEditAvatar={handleEditAvatarClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick} // Обработчик клика по карточке\n              cards={cards}\n              onCardLike={handleCardLike}\n              \n            />\n            } />\n            <Route path=\"./sign-up\">\n              <Register changeCurrUrl={changeCurrUrl} onInfoTooltip={handleInfoTooltip} />\n            </Route>\n            <Route path=\"./sign-in\">\n              <Login handleLogin={handleLogin} />\n            </Route>\n            <Route>\n              {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"./sign-in\" />}\n            </Route>\n          </Switch>\n          \n      \n          {/*Создаем попап для аватара и передаем пропсы и обработчики*/}\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          {/*Создаем попап для профиля и передаем пропсы и обработчики*/}\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          {/*Создаем попап для новой карточки и передаем пропсы и обработчики*/}\n          <AddCardPopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlace}\n          />\n\n          {/*Создаем попап для подтверждения удаления карточки и передаем пропсы и обработчики*/}\n          <PopupWithForm\n            name=\"confirm-delete\"\n            title=\"Вы уверены?\"\n            btnName=\"Да\"\n            isOpen={isDelCardPopupOpen}\n            onClose={closeAllPopups}\n          >\n          </PopupWithForm>\n\n          {/*Создаем попап с картинкой и передаем пропсы и обработчики*/}\n          <PopupWithImage\n            card={selectedCard}\n            onClose={closeAllPopups}\n          />\n\n          {/*Попап с сообщением*/}\n          {<InfoTooltip\n            isOpen={isInfoTooltip}\n            onClose={closeAllPopups}\n          />}\n\n        </div>\n      </CurrentUserContext.Provider>\n    </StatePopup.Provider>\n  );\n}\n\nexport default App;\n","E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\FormSign.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\Header.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\index.js",[],["107","108"],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\utils\\auth.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\InfoTooltip.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\Main.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\contexts\\StatePopup.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\PopupWithForm.js",[],"E:\\Users\\Янис\\dev\\react-mesto-auth\\src\\components\\Login.js",[],{"ruleId":"109","severity":1,"message":"110","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":34},{"ruleId":"109","severity":1,"message":"113","line":1,"column":46,"nodeType":"111","messageId":"112","endLine":1,"endColumn":57},{"ruleId":"109","severity":1,"message":"114","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":14},{"ruleId":"109","severity":1,"message":"115","line":36,"column":30,"nodeType":"111","messageId":"112","endLine":36,"endColumn":51},{"ruleId":"109","severity":1,"message":"116","line":79,"column":12,"nodeType":"111","messageId":"112","endLine":79,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":194,"column":6,"nodeType":"119","endLine":194,"endColumn":34,"suggestions":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'Footer' is defined but never used.","'setIsDelCardPopupOpen' is assigned a value but never used.","'handleCardDelete' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["125"],"no-native-reassign",["126"],"no-negated-in-lhs",["127"],{"desc":"128","fix":"129"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [location.pathname, currURL, tokenCheck]",{"range":"130","text":"131"},[5888,5916],"[location.pathname, currURL, tokenCheck]"]