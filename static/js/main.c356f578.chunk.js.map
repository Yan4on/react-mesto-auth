{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupWithImage.js","components/PopupHTML.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddCardPopup.js","images/ok.svg","images/error.svg","components/InfoTooltip.js","components/FormSign.js","components/Register.js","components/Login.js","components/ProtectedRoute.js","utils/api.js","utils/auth.js","contexts/StatePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","email","signOut","loggedIn","currURL","changeCurrUrl","className","src","logo","alt","to","onClick","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","_id","owner","cardButtonRemoveClassName","isLiked","likes","some","like","cardButtonLikeClassName","link","name","type","length","Main","memo","onEditAvatar","onEditProfile","onAddPlace","cards","style","backgroundImage","avatar","about","map","Footer","PopupWithForm","title","btnName","isOpen","onClose","onSubmit","children","noValidate","PopupWithImage","Object","keys","InputEditAvatar","onChange","avatarRef","id","placeholder","required","ref","InputEditProfile","inputName","inputAbout","minLength","maxLength","value","InputAddCard","place","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","target","EditAvatarPopup","onUpdateAvatar","useRef","current","reset","AddCardPopup","setPlace","setLink","InfoTooltip","status","logoOk","logoErr","message","FormSign","isInvalid","inputPass","inputEmail","disabled","Register","authRegister","setEmail","password","setPassword","useHistory","Login","authLogin","then","ProtectedRoute","Component","component","props","api","baseUrl","headers","this","_baseUrl","_headers","_errorServer","document","querySelector","res","ok","json","Promise","reject","Error","fetch","_getResponseData","method","body","JSON","stringify","action","err","textContent","classList","add","setTimeout","remove","authorization","BASE_URL","StatePopup","App","history","location","useLocation","setCurrentUser","userEmail","setUserEmail","setLoggedIn","setCurrURL","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDelCardPopupOpen","selectedCard","setSelectedCard","isInfoTooltip","setIsInfoTooltip","setCards","handleCardLike","changeLikeCardStatus","newCard","newCards","c","catch","setErrorServer","handleCardDelete","deleteCardToServer","filter","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","onInfoTooltip","closeAllPopups","handleLogin","tokenCheck","token","jwt","localStorage","getItem","data","push","url","all","getUserInfoFromServer","getInitialCards","userData","cardsData","pathname","popupStateContext","Provider","removeItem","exact","path","auth","console","log","response","setItem","saveAvatarToServer","inputValues","saveUserInfoToServer","saveCardToServer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c356f578.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c2821b38.svg\";","import logo from '../images/logo.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Header({ email, signOut, loggedIn, currURL, changeCurrUrl }) {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={logo} className=\"header__logo\" alt=\"Логотип Место\" />\r\n            <span className=\"header__email\">{loggedIn && email}</span>\r\n            {loggedIn\r\n                ? ''\r\n                : (currURL === '/sign-up')\r\n                    ? <Link to=\"/sign-in\" onClick={() => changeCurrUrl('/sign-in')} className=\"header__link\">Войти</Link>\r\n                    : <Link to=\"/sign-up\" onClick={() => changeCurrUrl('/sign-up')} className=\"header__link\">Зарегистрироваться</Link>\r\n\r\n            }\r\n            {loggedIn\r\n                ? <Link to=\"/\" onClick={signOut} className=\"header__link\">Выйти</Link>\r\n                : ''\r\n            }\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  const isOwn = currentUser._id === card.owner._id;\r\n  const cardButtonRemoveClassName = `grid-card__del ${isOwn && 'grid-card__del_active'}`;\r\n\r\n  const isLiked = card.likes.some(like => like._id === currentUser._id);\r\n  const cardButtonLikeClassName = `grid-card__like ${isLiked && 'grid-card__like_active'}`;\r\n  return (\r\n    <article className=\"grid-card\">\r\n      <img\r\n        className=\"grid-card__img\"\r\n        src={card.link}\r\n        alt={card.name}\r\n        onClick={() => onCardClick(card)}\r\n      />\r\n      <div className=\"grid-card__wrapper\">\r\n        <h3 className=\"grid-card__text\">{card.name}</h3>\r\n        <div className=\"grid-card__likes\">\r\n          <button\r\n            type=\"button\"\r\n            className={cardButtonLikeClassName}\r\n            onClick={() => onCardLike(card)}\r\n          ></button>\r\n          <span className=\"grid-card__likes-count\">{card.likes.length}</span>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className={cardButtonRemoveClassName}\r\n        onClick={() => onCardDelete(card)}\r\n      ></button>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Card;","import React, { useContext, memo } from 'react';\r\nimport Card from \"./Card.js\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nconst Main = memo(({\r\n  onEditAvatar,\r\n  onEditProfile,\r\n  onAddPlace,\r\n  cards,\r\n  onCardClick,\r\n  onCardLike,\r\n  onCardDelete\r\n}) => {\r\n\r\n    \r\n    //Подписываемся на контекст\r\n  const currentUser = useContext(CurrentUserContext); //Подписываемся на контекст\r\n\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__wrapper\">\r\n          <button\r\n            className=\"profile__avatar\"\r\n            onClick={onEditAvatar}\r\n            style={{ backgroundImage: `url(${currentUser.avatar})` }}\r\n          ></button>\r\n          <div className=\"profile__form\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <button\r\n              className=\"profile__button-edit\"\r\n              onClick={onEditProfile}\r\n              type=\"button\"\r\n            ></button>\r\n            <p className=\"profile__interst\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n        <button\r\n          className=\"profile__button-add\"\r\n          type=\"button\"\r\n          onClick={onAddPlace}\r\n        ></button>\r\n      </section>\r\n\r\n      <section className=\"cards-container\">\r\n        {cards.map((card) => (\r\n          <Card\r\n            card={card}\r\n            key={card._id}\r\n            onCardClick={onCardClick}\r\n            onCardLike={onCardLike}\r\n            onCardDelete={onCardDelete}\r\n          />\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n})\r\n\r\nexport default Main;\r\n","\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&#169; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","function PopupWithForm({name, title, btnName, isOpen, onClose, onSubmit, children}) {\r\n    return (\r\n        <div className={`popup popup__${name} ${isOpen ? 'popup_opened' : ''}`}>\r\n            <div className=\"popup__container\">\r\n                <form className=\"form\" name={`popup__form_${name}`} noValidate onSubmit={onSubmit}>\r\n                    <h2 className=\"form__title\">{title}</h2>\r\n                    {children}\r\n                    (\r\n                    <button type=\"submit\" className=\"form__submit\">{btnName}</button>\r\n                    <button type=\"button\" className=\"popup__close-button\" onClick={onClose}></button>\r\n                    )\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;\r\n\r\n","function PopupWithImage({ card, onClose }) {\r\n    return (\r\n      <div className={`popup popup_big-pic ${Object.keys(card).length && 'popup_opened'}`}>\r\n        <div className=\"popup__container popup__container_background\">\r\n          <img className=\"popup__img-big\" src={card.link} alt={card.name} />\r\n          <h2 className=\"popup__title\">{card.name}</h2>\r\n          <button type=\"button\" className=\"popup__close-button\" onClick={onClose}></button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default PopupWithImage;\r\n","export function InputEditAvatar({ onChange, avatarRef }) {\r\n    return (\r\n        <>\r\n              <input type=\"url\" id=\"link-input\" name=\"link\" className=\"form__input form__input_link\"\r\n                placeholder=\"Ссылка на изображение\" required ref={avatarRef} onChange={onChange} />\r\n              <span className=\"popup__input-error\" id=\"link-input-error\"></span>\r\n            </>\r\n    );\r\n}\r\n\r\nexport function InputEditProfile({ inputName, inputAbout, onChange }) {\r\n    return (\r\n        <>\r\n                <input type=\"text\" id=\"name-input\" name=\"name\" className=\"form__input form__contact-name\" placeholder=\"Имя\"\r\n                  minLength=\"2\" maxLength=\"40\" required value={inputName || \"\"} onChange={onChange} />\r\n                <span className=\"popup__input-error\" id=\"name-input-error\"></span>\r\n                <input type=\"text\" id=\"interst-input\" name=\"about\" placeholder=\"О себе\"\r\n                  className=\"form__input form__contact-interst\" minLength=\"2\" maxLength=\"200\" required value={inputAbout || \"\"} onChange={onChange} />\r\n                <span className=\"popup__input-error\" id=\"interst-input-error\"></span>\r\n              </>\r\n    );\r\n}\r\n\r\nexport function InputAddCard({ onChange, place, link }) {\r\n    return (\r\n        <>\r\n                <input type=\"text\" id=\"title-input\" name=\"name\" className=\"form__input form__item-name\"\r\n                  placeholder=\"Название\" minLength=\"1\" maxLength=\"30\"required onChange={onChange} value={place}/>\r\n                <span className=\"popup__input-error\" id=\"title-input-error\"></span>\r\n                <input type=\"url\" id=\"link-input\" name=\"link\" className=\"form__input form__link-img\"\r\n                  placeholder=\"Ссылка на картинку\" required onChange={onChange} value={link}/>\r\n                <span className=\"popup__input-error\" id=\"link-input-error\"></span>\r\n              </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { InputEditProfile } from './PopupHTML';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState(\"\");\r\n    const [description, setDescription] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser({\r\n            name,\r\n            about: description\r\n        });\r\n    }\r\n\r\n    function handleChange(e) {\r\n        // если аттрибут name имеет значение name, то устанавливаем setName\r\n        // иначе setDescription\r\n        e.target.name === \"name\" ?\r\n            setName(e.target.value) :\r\n            setDescription(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"edit-profile\"\r\n            title=\"Редактировать профиль\"\r\n            btnName=\"Сохранить\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <InputEditProfile\r\n                inputName={name}\r\n                inputAbout={description}\r\n                onChange={handleChange}\r\n            />\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport { InputEditAvatar } from './PopupHTML';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateAvatar({\r\n            link: avatarRef.current.value /* Значение инпута, полученное с помощью рефа */\r\n        });\r\n        e.target.reset();\r\n    }\r\n\r\n    return (\r\n      <PopupWithForm\r\n          name=\"edit-avatar\"\r\n          title=\"Обновить аватар\"\r\n          btnName=\"Сохранить\"\r\n          isOpen={isOpen}\r\n          onClose={onClose}\r\n          onSubmit={handleSubmit}\r\n      >\r\n          <InputEditAvatar\r\n              avatarRef={avatarRef}\r\n          />\r\n      </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport { InputAddCard } from './PopupHTML';\r\nimport PopupWithForm from './PopupWithForm.js';\r\n\r\nfunction AddCardPopup({ isOpen, onClose, onAddPlace }) {\r\n\r\n    const [place, setPlace] = React.useState(\"\");\r\n    const [link, setLink] = React.useState(\"\");\r\n\r\n    // Обработчик нажатия кнопки Создать\r\n    function handleAddPlaceSubmit(e) {\r\n        e.preventDefault();\r\n        onAddPlace({\r\n            name: place,\r\n            link\r\n        });\r\n    }\r\n\r\n    // Обработчик ввода данных в поля\r\n    function handleChange(e) {\r\n        // если аттрибут name имеет значение name, то устанавливаем setPlace\r\n        // иначе setLink\r\n        e.target.name === \"name\" ?\r\n            setPlace(e.target.value) :\r\n            setLink(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name=\"add-card\"\r\n            title=\"Новое место\"\r\n            btnName=\"Создать\"\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleAddPlaceSubmit}\r\n        >\r\n            <InputAddCard\r\n                onChange={handleChange}\r\n            />\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddCardPopup;","export default __webpack_public_path__ + \"static/media/ok.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/error.d0f413bf.svg\";","import logoOk from '../images/ok.svg';\r\nimport logoErr from '../images/error.svg';\r\nimport React, { memo } from 'react';\r\n\r\nconst InfoTooltip = memo(({ isOpen, onClose }) => {\r\n  return (\r\n    <div className={`popup ${isOpen.isOpen && 'popup_opened'}`} >\r\n      <form className=\"popup__container\" name=\"popup__image\" noValidate>\r\n        <div className=\"popup__logo\"\r\n          style={isOpen.status === 'ok'\r\n            ? { backgroundImage: `url(${logoOk})` }\r\n            : { backgroundImage: `url(${logoErr})` }\r\n          }\r\n        ></div>\r\n        <h2 className=\"popup__message\">{isOpen.message}</h2>\r\n        <button type=\"button\" className=\"popup__btn-close\" onClick={onClose}></button>\r\n      </form>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default InfoTooltip;","import React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FormSign = memo(({ name, title, onSubmit, onChange, isInvalid,  btnName, changeCurrUrl, inputPass, inputEmail  }) => {\r\n    return (\r\n        <form className=\"form-auth\" name={`form_${name}`} noValidate onSubmit={onSubmit} >\r\n            <h2 className=\"form-auth__title\">{title}</h2>\r\n            <label className=\"form-auth__field\">\r\n                <input type=\"text\" className=\"form-auth__input\" id={`form-email-${name}`} name=\"email\" placeholder=\"Email\"\r\n                    minLength=\"1\" maxLength=\"30\" onChange={onChange} value={inputEmail}/>\r\n\r\n            </label>\r\n            <label className=\"form-auth__field\">\r\n                <input type=\"password\" className=\"form-auth__input\" id={`form-password-${name}`} name=\"password\"\r\n                    placeholder=\"Пароль\" onChange={onChange} value={inputPass}/>\r\n\r\n            </label>\r\n            <button type=\"submit\" className={`form-auth__btn ${isInvalid ? 'form__btn_disabled' : ''}`} disabled={isInvalid}>\r\n                {btnName}\r\n            </button>\r\n            { name === \"sign-up\" && <p className=\"form-auth__text\">Уже зарегистрированы? <Link to=\"/sign-in\" onClick={() => changeCurrUrl('/sign-in')} className=\"form-auth__link\" >Войти</Link></p>}\r\n        </form>\r\n\r\n    );\r\n});\r\n\r\nexport default FormSign;","import React, { useState, memo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport FormSign from './FormSign';\r\n\r\nconst Register = memo(({ changeCurrUrl, authRegister, inputPass }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const history = useHistory();\r\n    // Обработчик ввода данных в поля\r\n    function handleChange(e) {\r\n\r\n        const { name, value } = e.target;\r\n\r\n        //обновляем значение поля после каждого ввода символа\r\n        name === \"email\" ?\r\n            setEmail(value) :\r\n            setPassword(value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        authRegister(email, password);\r\n    }\r\n\r\n    return (\r\n        <FormSign\r\n            name=\"sign-up\"\r\n            title=\"Регистрация\"\r\n            btnName=\"Зарегистрироваться\"\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            changeCurrUrl={changeCurrUrl}\r\n            inputPass={inputPass }\r\n        />\r\n    );\r\n});\r\n\r\nexport default Register;","import React, { useState, memo } from 'react';\r\nimport FormSign from './FormSign';\r\n\r\nconst Login = memo(({ authLogin, inputPass  }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    // Обработчик ввода данных в поля\r\n    function handleChange(e) {\r\n        const { name, value } = e.target;\r\n\r\n        //обновляем значение поля после каждого ввода символа\r\n        name === \"email\" ?\r\n            setEmail(value) :\r\n            setPassword(value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (!email || !password) {\r\n            return;\r\n        }\r\n\r\n        authLogin(email, password)\r\n            .then(() => {\r\n                setEmail('');\r\n                setPassword('');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <FormSign\r\n            name=\"sign-in\"\r\n            title=\"Вход\"\r\n            btnName=\"Войти\"\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            inputPass={inputPass}\r\n        />\r\n    );\r\n});\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n    return (\r\n        <Route>\r\n            {\r\n                () => props.loggedIn ? (<><Component {...props} /> </>) : <Redirect to=\"./sign-in\" />\r\n            }\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","// Видимо был баг, на гитхаб не улетала переименованное название компонента, только заметил\r\nclass Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n    this._errorServer = document.querySelector(\".error-server\");\r\n  }\r\n\r\n  // Получение ответа от сервера, иначе ошибка\r\n  _getResponseData(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка: ${res.status}`)); // если ошибка при запросе, переходим к catch\r\n  }\r\n\r\n  // Получение с сервера начальных карточек\r\n  getInitialCards() {\r\n    return fetch(`${this._baseUrl}/cards`, { headers: this._headers }).then(\r\n      (res) => {\r\n        return this._getResponseData(res);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Сохранение на сервере карточки\r\n  saveCardToServer({ name, link }) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._headers,\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link,\r\n      }),\r\n    }).then((res) => {\r\n      return this._getResponseData(res);\r\n    });\r\n  }\r\n\r\n  // Удаление на сервере карточки\r\n  deleteCardToServer(card) {\r\n    return fetch(`${this._baseUrl}/cards/${card._id}`, {\r\n      headers: this._headers,\r\n      method: \"DELETE\",\r\n    });\r\n  }\r\n\r\n  // Обновление лайка\r\n  changeLikeCardStatus(card, isLiked) {\r\n    const action = isLiked ? 'DELETE' : 'PUT';\r\n\r\n    return fetch(`${this._baseUrl}/cards/likes/${card._id}`, {\r\n        headers: this._headers,\r\n        method: action\r\n    })\r\n        .then((res) => { return this._getResponseData(res); })\r\n}\r\n\r\n  // Сохранение на сервере Аватара\r\n  saveAvatarToServer({ link }) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      headers: this._headers,\r\n      method: \"PATCH\",\r\n      body: JSON.stringify({\r\n        avatar: link,\r\n      }),\r\n    }).then((res) => {\r\n      return this._getResponseData(res);\r\n    });\r\n  }\r\n\r\n  // Получение с сервера информация о пользователе\r\n  getUserInfoFromServer() {\r\n    return fetch(`${this._baseUrl}/users/me`, { headers: this._headers }).then(\r\n      (res) => {\r\n        return this._getResponseData(res);\r\n      }\r\n    );\r\n  }\r\n\r\n  // Сохранение на сервере информация о пользователе\r\n  saveUserInfoToServer({ name, about }) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers,\r\n      method: \"PATCH\",\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about,\r\n      }),\r\n    }).then((res) => {\r\n      return this._getResponseData(res);\r\n    });\r\n  }\r\n\r\n  // Вывод ошибки запроса к серверу на страницу\r\nsetErrorServer(err) {\r\n  this._errorServer.textContent = `Ошибка при соединение с сервером: ${err}. Попробуйте повторить позже`;\r\n\r\n  this._errorServer.classList.add('error-server_active');\r\n  setTimeout(() => {\r\n      this._errorServer.classList.remove('error-server_active');\r\n  }, 8000)\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-17\",\r\n  headers: {\r\n    authorization: \"691998da-b477-4262-8750-23151b55d1d5\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (email, password) => {\r\n    return fetch(`${BASE_URL}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ password, email })\r\n    })\r\n        .then((res) => {\r\n            if (res.ok) { return res.json(); }\r\n\r\n            return Promise.reject(new Error(`Ошибка: ${res.status}`)); // если ошибка при запросе, переходим к catch\r\n        });\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n    return fetch(`${BASE_URL}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n        .then((response => response.json()))\r\n        .then((data) => {\r\n            if (data.token) {\r\n                localStorage.setItem('jwt', data.token);\r\n                return data;\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const getContent = (token) => {\r\n    return fetch(`${BASE_URL}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`,\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => data)\r\n} ","import React from 'react';\r\n\r\nexport const StatePopup = React.createContext();","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Route, Switch, useHistory, useLocation, Redirect } from 'react-router-dom';\r\nimport Header from './Header.js';\r\nimport Main from './Main.js';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport PopupWithImage from './PopupWithImage.js';\r\nimport EditProfilePopup from './EditProfilePopup.js';\r\nimport EditAvatarPopup from './EditAvatarPopup.js';\r\nimport AddCardPopup from './AddCardPopup.js';\r\nimport InfoTooltip from './InfoTooltip';\r\n\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport ProtectedRoute from './ProtectedRoute';\r\n\r\nimport { api } from '../utils/api.js';\r\nimport * as auth from '../utils/auth';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { StatePopup } from '../contexts/StatePopup';\r\n\r\n\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  // Устанавливаем стэйты\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [currURL, setCurrURL] = useState('');\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isDelCardPopupOpen, setIsDelCardPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n  const [isInfoTooltip, setIsInfoTooltip] = useState({\r\n    isOpen: false,\r\n    message: '',\r\n    status: ''\r\n  });\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  // Используем хук для получения информации о юзере и карточки\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      Promise.all([\r\n        api.getUserInfoFromServer(), //получаем данные о пользователе\r\n        api.getInitialCards() // Получаем массив карточек\r\n      ])\r\n        .then((data) => {\r\n          const [userData, cardsData] = data;\r\n          setCurrentUser(userData); //меняем состояния \r\n          setCards(cardsData);\r\n        })\r\n        .catch((err) => { api.setErrorServer(err); })\r\n    }\r\n  }, [loggedIn]);\r\n\r\n\r\n  // Обработчик клика по лайку\r\n  function handleCardLike(card) {\r\n    // Проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card, isLiked)\r\n      .then((newCard) => {\r\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);  // Обновляем стейт\r\n      })\r\n      .catch((err) => { api.setErrorServer(err); });\r\n  }\r\n\r\n  // Обработчик кнопки удаления карточки\r\n  function handleCardDelete(card) {\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.deleteCardToServer(card)\r\n      .then(() => {\r\n        // Формируем новый массив на основе имеющегося, если ИД совпадает с ИД \r\n        // удаляемой карточки, то она не должна попасть в новый массив\r\n        const newCards = cards.filter((c) => c._id !== card._id && c);\r\n        setCards(newCards);  // Обновляем стейт\r\n      })\r\n      .catch((err) => { api.setErrorServer(err); });\r\n  }\r\n\r\n  // Обработчик кнопки Сохранить в попапе редактирования профиля\r\n  function handleUpdateUser(inputValues) {\r\n    api.saveUserInfoToServer(inputValues)   // Сохраняем на сервере\r\n      .then((userData) => {\r\n        closeAllPopups()\r\n        setCurrentUser(userData)\r\n      }) // устанавливаем новый стэйт: новые данные пользователя\r\n      .catch((err) => {\r\n        api.setErrorServer(err);\r\n      })\r\n  }\r\n\r\n  // Обработчик кнопки Сохранить в попапе редактирования аватара\r\n  function handleUpdateAvatar(avatar) {\r\n    api.saveAvatarToServer(avatar)   // Сохраняем на сервере\r\n      .then((userData) => {\r\n        setCurrentUser(userData)\r\n        closeAllPopups()\r\n      }) // устанавливаем новый стэйт: новый аватар\r\n      .catch((err) => {\r\n        api.setErrorServer(err);\r\n      })\r\n  }\r\n\r\n  // Обработчик кнопки Создать в попапе добавления карточки\r\n  function handleAddPlace(newCard) {\r\n    api.saveCardToServer(newCard)   // Сохраняем на сервере\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards])\r\n        closeAllPopups()\r\n      }) // Обновляем массив с карточками, добавляем загруженную\r\n      .catch((err) => { api.setErrorServer(err); })\r\n  }\r\n\r\n  // Обработчики открытия попапов\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function onInfoTooltip(message, status) {\r\n    setIsInfoTooltip({\r\n      isOpen: true,\r\n      message: message,\r\n      status: status\r\n    });\r\n  }\r\n\r\n  // Обработчик закрытия попапов\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard({});\r\n    setIsInfoTooltip(false);\r\n  }\r\n\r\n  function handleLogin(email) {\r\n    setLoggedIn(true);\r\n    setUserEmail(email);\r\n  }\r\n\r\n  function tokenCheck() {\r\n    const jwt = localStorage.getItem('jwt');\r\n\r\n  if (jwt) {\r\n  auth.getContent(jwt)\r\n  .then((res) => {\r\n  if (res) {\r\n  setLoggedIn(true);\r\n  setUserEmail(res.data.email);\r\n  history.push('/');\r\n     }\r\n   });\r\n  }\r\n }\r\n\r\n function handleAuthRegister(email, password) {\r\n auth.register(email, password)\r\n     .then((res) => {\r\n         if (res.status === 201) {\r\n             onInfoTooltip('Вы успешно зарегистрировались!', 'ok')\r\n             history.push('/sign-in');\r\n             changeCurrUrl('/sign-in');\r\n             return;\r\n         }\r\n         onInfoTooltip('Что-то пошло не так! Попробуйте ещё раз.', 'error')\r\n         return res;\r\n     })\r\n     .catch((err) => {\r\n         onInfoTooltip('Что-то пошло не так! Попробуйте ещё раз.', 'error');\r\n         console.log(err)\r\n     });\r\n    }\r\n\r\n function handleAuthLogin(email, password) {\r\n  return auth.authorize(email, password)\r\n    .then((data) => {\r\n      if (data) {\r\n        handleLogin(email);\r\n        history.push('/');\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\n  function signOut() {\r\n    localStorage.removeItem('jwt');\r\n    setLoggedIn(false);\r\n    history.push('/sign-in');\r\n  }\r\n\r\n  function changeCurrUrl(url) {\r\n    setCurrURL(url);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCurrURL(location.pathname);\r\n  }, [location.pathname, currURL]);\r\n\r\n  useEffect(() => {\r\n    tokenCheck();\r\n  }, []);\r\n\r\n  // Объект с состояниями попапов\r\n  const popupStateContext = {\r\n    isEditProfilePopupOpen,\r\n    isEditAvatarPopupOpen,\r\n    isAddPlacePopupOpen\r\n  }\r\n\r\n  return (\r\n    <StatePopup.Provider value={popupStateContext}>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <div className=\"page\">\r\n        <Header\r\n            email={userEmail}\r\n            signOut={signOut}\r\n            loggedIn={loggedIn}\r\n            currURL={currURL}\r\n            changeCurrUrl={changeCurrUrl} />\r\n          <Switch>\r\n            <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={() => <Main\r\n              onEditProfile={handleEditProfileClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onCardClick={handleCardClick} // Обработчик клика по карточке\r\n              cards={cards}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n            />\r\n            } />\r\n            <Route path=\"/sign-up\">\r\n              <Register \r\n              changeCurrUrl={changeCurrUrl}\r\n              authRegister={handleAuthRegister}\r\n               />\r\n            </Route>\r\n            <Route path=\"/sign-in\">\r\n              <Login \r\n              handleLogin={handleLogin} \r\n              authLogin={handleAuthLogin}\r\n              />\r\n            </Route>\r\n            <Route>\r\n              {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\"  />}\r\n            </Route>\r\n          </Switch>\r\n\r\n          \r\n\r\n          {/*Создаем попап для аватара и передаем пропсы и обработчики*/}\r\n          <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n          />\r\n\r\n          {/*Создаем попап для профиля и передаем пропсы и обработчики*/}\r\n          <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser}\r\n          />\r\n\r\n          {/*Создаем попап для новой карточки и передаем пропсы и обработчики*/}\r\n          <AddCardPopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlace}\r\n          />\r\n\r\n          {/*Создаем попап для подтверждения удаления карточки и передаем пропсы и обработчики*/}\r\n          <PopupWithForm\r\n            name=\"confirm-delete\"\r\n            title=\"Вы уверены?\"\r\n            btnName=\"Да\"\r\n            isOpen={isDelCardPopupOpen}\r\n            onClose={closeAllPopups}\r\n          >\r\n          </PopupWithForm>\r\n\r\n          {/*Создаем попап с картинкой и передаем пропсы и обработчики*/}\r\n          <PopupWithImage\r\n            card={selectedCard}\r\n            onClose={closeAllPopups}\r\n          />\r\n\r\n          {/*Попап с сообщением*/}\r\n          {<InfoTooltip\r\n            isOpen={isInfoTooltip}\r\n            onClose={closeAllPopups}\r\n          />}\r\n\r\n          { loggedIn && <Footer/>}\r\n\r\n        </div>\r\n      </CurrentUserContext.Provider>\r\n    </StatePopup.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './pages/index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}